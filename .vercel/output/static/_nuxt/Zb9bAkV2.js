import{u as y}from"./-LzsfN83.js";import{r as d,K as f,j as u}from"./71iuM9A_.js";const $=()=>{const t=y(),e=d([]),c=d(!1),i=d(null),m=async()=>{c.value=!0,i.value=null;try{const{data:n,error:o}=await t.from("funcionarios").select("id, nome, cargo, email").order("created_at",{ascending:!1});if(o){console.error("Erro ao buscar funcionários:",o),i.value=o.message;return}e.value=n||[]}catch(n){console.error("Erro na fetchFuncionarios:",n),i.value="Erro interno do sistema"}finally{c.value=!1}},a=async n=>{try{const{data:o,error:s}=await t.from("funcionarios").insert(n).select("id, nome, cargo, email").single();return s?(console.error("Erro ao adicionar funcionário:",s),{success:!1,error:s.message}):(o&&e.value.unshift(o),{success:!0,data:o})}catch(o){return console.error("Erro na adicionarFuncionario:",o),{success:!1,error:"Erro interno do sistema"}}},r=n=>e.value.find(s=>s.id===n)||null,g=async(n,o)=>{try{const{data:s,error:l}=await t.from("funcionarios").update(o).eq("id",n).select("id, nome, cargo, email").single();if(l)return console.error("Erro ao atualizar funcionário:",l),{success:!1,error:l.message};const E=e.value.findIndex(v=>v.id===n);return E!==-1&&s&&(e.value[E]=s),{success:!0,data:s}}catch(s){return console.error("Erro na atualizarFuncionario:",s),{success:!1,error:"Erro interno do sistema"}}},h=async n=>{try{const{error:o}=await t.from("funcionarios").delete().eq("id",n);return o?(console.error("Erro ao deletar funcionário:",o),{success:!1,error:o.message}):(e.value=e.value.filter(s=>s.id!==n),{success:!0})}catch(o){return console.error("Erro na deletarFuncionario:",o),{success:!1,error:"Erro interno do sistema"}}};return{funcionarios:f(e),loading:f(c),error:f(i),fetchFuncionarios:m,adicionarFuncionario:a,buscarFuncionarioPorId:r,atualizarFuncionario:g,deletarFuncionario:h}},x=()=>{const t=a=>{try{const{$toast:r}=u();r?r.success(a,{timeout:4e3}):alert(`✅ ${a}`)}catch(r){console.error("Erro ao mostrar toast:",r),alert(`✅ ${a}`)}},e=a=>{try{const{$toast:r}=u();r?r.error(a,{timeout:6e3}):alert(`❌ ${a}`)}catch(r){console.error("Erro ao mostrar toast:",r),alert(`❌ ${a}`)}},c=a=>{try{const{$toast:r}=u();r?r.warning(a,{timeout:5e3}):alert(`⚠️ ${a}`)}catch(r){console.error("Erro ao mostrar toast:",r),alert(`⚠️ ${a}`)}},i=a=>{try{const{$toast:r}=u();r?r.info(a,{timeout:4e3}):alert(`ℹ️ ${a}`)}catch(r){console.error("Erro ao mostrar toast:",r),alert(`ℹ️ ${a}`)}};return{showSuccess:t,showError:e,showWarning:c,showInfo:i,notifications:{funcionario:{cadastrado:()=>t("Funcionário cadastrado com sucesso! 🎉"),atualizado:()=>t("Funcionário atualizado com sucesso! ✅"),excluido:()=>t("Funcionário excluído com sucesso! 🗑️"),erroCarregar:()=>e("Erro ao carregar funcionários. Tente novamente."),erroCadastrar:()=>e("Erro ao cadastrar funcionário. Verifique os dados."),erroAtualizar:()=>e("Erro ao atualizar funcionário. Tente novamente."),erroExcluir:()=>e("Erro ao excluir funcionário. Tente novamente."),dadosInvalidos:()=>c("Verifique se todos os campos obrigatórios estão preenchidos.")},auth:{loginSucesso:()=>t("Login realizado com sucesso! 👋"),loginErro:()=>e("Credenciais inválidas. Verifique e-mail e senha."),logoutSucesso:()=>i("Logout realizado com sucesso. Até logo! 👋")},system:{carregando:()=>i("Carregando dados..."),semConexao:()=>e("Sem conexão. Verifique sua internet."),erroInesperado:()=>e("Erro inesperado. Tente recarregar a página.")}}}};export{x as a,$ as u};
